<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="addressBookMapper">

	<resultMap type="Member" id="memberResultSet">
		<id property="empNo" column="EMP_NO" />
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="empName" column="EMP_NAME" />
		<result property="userNo" column="USER_NO" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="hireDate" column="HIRE_DATE" />
		<result property="status" column="STATUS" />
		<result property="endDate" column="END_DATE" />
		<result property="jobNo" column="JOB_NO" />
		<result property="departmentNo" column="DEPARTMENT_NO" />
	</resultMap>


	<resultMap type="WideMember" id="wideMemberResultSet">
		<id property="empNo" column="EMP_NO" />
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="empName" column="EMP_NAME" />
		<result property="userNo" column="USER_NO" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="hireDate" column="HIRE_DATE" />
		<result property="status" column="STATUS" />
		<result property="endDate" column="END_DATE" />
		<result property="jobNo" column="JOB_NO" />
		<result property="departmentNo" column="DEPARTMENT_NO" />
		<result property="jobName" column="JOB_NAME" />
		<result property="departmentTitle" column="DEPARTMENT_TITLE" />
	</resultMap>

	<resultMap type="Dept" id="deptResultSet">
		<id property="dNo" column="EMP_NO" />
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="empName" column="EMP_NAME" />
		<result property="userNo" column="USER_NO" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="hireDate" column="HIRE_DATE" />
		<result property="status" column="STATUS" />
		<result property="endDate" column="END_DATE" />
		<result property="jobNo" column="JOB_NO" />
		<result property="departmentNo" column="DEPARTMENT_NO" />
		<result property="jobName" column="JOB_NAME" />
		<result property="departmentTitle" column="DEPARTMENT_TITLE" />
	</resultMap>

	<resultMap type="Customer" id="customerResultSet">
		<id property="cusNo" column="CUS_NO" />
		<result property="empNo" column="EMP_NO" />
		<result property="inFolder" column="IN_FOLDER" />
		<result property="comNm" column="COM_NM" />
		<result property="comNo" column="COMNO" />
		<result property="comTel" column="COM_TEL" />
		<result property="comCeo" column="COM_CEO" />
		<result property="comPix" column="COM_PIX" />
		<result property="comPhone" column="COM_PHONE" />
		<result property="comEmail" column="COM_EMAIL" />
		<result property="comMemo" column="COM_MEMO" />
		<result property="creDate" column="CRE_DATE" />
		<result property="outBox" column="OUTBOX" />
	</resultMap>

	<resultMap type="Company" id="companyResultSet">
		<id property="compNo" column="COM_NO" />
		<result property="empNo" column="EMP_NO" />
		<result property="inFolder" column="IN_FOLDER" />
		<result property="comNm" column="COM_NM" />
		<result property="comNo" column="COMNO" />
		<result property="comTel" column="COM_TEL" />
		<result property="comCeo" column="COM_CEO" />
		<result property="comPix" column="COM_PIX" />
		<result property="comPhone" column="COM_PHONE" />
		<result property="comEmail" column="COM_EMAIL" />
		<result property="comMemo" column="COM_MEMO" />
		<result property="creDate" column="CRE_DATE" />
		<result property="outBox" column="OUTBOX" />
	</resultMap>
	
	<resultMap type="Favorite" id="FavoriteResultSet">
		<id property="bmSeq" column="BM_SEQ" />
		<result property="empNo" column="EMP_NO" />
		<result property="empOtherNo" column="EMP_OTHERNO" />
		<result property="bmLook" column="BM_LOOK" />
	</resultMap>

	<!-- 전체주소록조회 -->
	<select id="selectAllAddList" resultType="WideMember">
<![CDATA[
	SELECT A.EMP_NO,
			A.EMP_NAME,
           C.DEPARTMENT_TITLE,
           B.JOB_NAME,
           A.EMAIL,
           A.PHONE
 	FROM USER_INFO A 
    LEFT JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO =B.JOB_NO
    LEFT JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO =C.DEPARTMENT_NO 
    ORDER BY EMP_NAME ASC
]]>
	</select>


	<!-- 부서별 주소록 목록 뜨게 음.. 관리자가 부서 추가하면 계속 추가됨. 정렬순서는 부서번호순 -->

	<select id="selectDeptTitleList" resultType="Dept">
<![CDATA[
	SELECT *
    FROM DEPARTMENT_MANAGEMENT  
    ORDER BY DEPARTMENT_NO
]]>
	</select>

	<!-- 부서명클릭시 부서별 조회 리스트 나오게 -->
	<select id="selectDeptAddList" resultType="WideMember">
<![CDATA[
	 SELECT A.EMP_NAME,
	 		A.DEPARTMENT_NO,
           	C.DEPARTMENT_TITLE,
           	B.JOB_NAME,
           	A.EMAIL,
           	A.PHONE
 	FROM USER_INFO A 
    LEFT JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO = B.JOB_NO
    LEFT JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO
    WHERE C.DEPARTMENT_TITLE=#{departmentTitle}
    ORDER BY EMP_NAME
    ]]>
	</select>

	<!-- 고객주소록메인(로그인한 유저마다 다르게 나오는 전체조회) -->
	<select id="selectCustoList" resultType="Customer">
<![CDATA[
	SELECT *
	FROM CUSTO_ADD
	WHERE EMP_NO=#{empNo}
	AND OUTBOX='N'
    ]]>

	</select>

	<!-- 거래처주소록메인(로그인한 유저마다 다르게 나오는 전체조회) -->
	<select id="selectComList" resultMap="companyResultSet">
<![CDATA[
	SELECT *
	FROM COM_ADD
	WHERE EMP_NO=#{empNo}
	AND OUTBOX='N'
    ]]>

	</select>

	<!--전체 주소록검색기능 검색한 조건에 따라 이름 직급 부서명 이메일 휴대폰을 보여주는 쿼리 -->
	<select id="selectAllAddSearch" resultType="WideMember">
 <![CDATA[
 SELECT A.EMP_NAME,
           C.DEPARTMENT_TITLE,
           B.JOB_NAME,
           A.EMAIL,
           A.DEPARTMENT_NO,
           A.PHONE
 	FROM USER_INFO A 
    LEFT JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO =B.JOB_NO
    LEFT JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO =C.DEPARTMENT_NO 
    WHERE A.EMP_NAME LIKE '%'||#{search}||'%'
    OR C.DEPARTMENT_TITLE LIKE '%'||#{search}||'%'
    OR B.JOB_NAME LIKE '%'||#{search}||'%'
    OR A.EMAIL LIKE '%'||#{search}||'%'
    OR A.PHONE LIKE '%'||#{search}||'%'
     ]]>
	</select>

	<!-- 거래처등록 -->
	<insert id="insertComAdd" parameterType="Company">
  <![CDATA[
	    INSERT INTO COM_ADD
    (COM_NO,EMP_NO,COM_NM,IN_FOLDER,COMNO,COM_TEL,COM_CEO,COM_PIX,COM_PHONE,COM_EMAIL,COM_MEMO)
    VALUES
    (SEQ_COMADD.NEXTVAL,#{empNo},#{comNm},#{inFolder},#{comNo},#{comTel},#{comCeo},#{comPix},#{comPhone},#{comEmail},#{comMemo})
     ]]>
	</insert>

	<!-- 거래처주소록등록할때 자기사번으로 거래처 폴더명 불러오는 쿼리 -->
	<select id="selectComFolder" resultType="Company">
  <![CDATA[
  SELECT DISTINCT IN_FOLDER
    FROM COM_ADD
    WHERE IN_FOLDER IS NOT NULL
    AND EMP_NO=#{empNo}
    AND OUTBOX='N'
      ]]>
	</select>

	<!-- 주소록등록할때 자기사번으로 고객 폴더명 불러오는 쿼리 -->
	<select id="selectCusFolList" resultType="Customer">
  <![CDATA[
  SELECT DISTINCT IN_FOLDER
    FROM CUSTO_ADD
    WHERE IN_FOLDER IS NOT NULL
    AND EMP_NO=#{empNo}
    AND OUTBOX='N'
      ]]>
	</select>

	<!-- 고객주소록 등록 -->
	<insert id="insertCusAdd" parameterType="Customer">
  <![CDATA[
  INSERT INTO CUSTO_ADD
  VALUES
(SEQ_COUSADD.NEXTVAL,#{empNo},#{inFolder},#{comNm},#{comNo},#{comTel},#{comCeo},#{comPix},#{comPhone},#{comEmail},#{comMemo},sysdate,'N')
      ]]>
	</insert>

	<!-- 고객주소록 상세보기 -->
	<select id="selectCustoDetailView" resultType="Customer">
  <![CDATA[
  SELECT *
    FROM CUSTO_ADD
    WHERE CUS_NO=#{cusNo}
      ]]>
	</select>

	<!-- 거래처주소록 상세보기 -->
	<select id="selectComDetailView" resultMap="companyResultSet">
  <![CDATA[
  SELECT *
    FROM COM_ADD
    WHERE COM_NO=#{compNo}
      ]]>
	</select>

	<!-- 거래처 폴더명으로 리스트 조회하기 -->
	<select id="selectSearchComFolList" resultType="Company">
  <![CDATA[
  SELECT *
    FROM COM_ADD
    WHERE IN_FOLDER=#{inFolder}
    AND EMP_NO=#{empNo}
    AND OUTBOX='N'
      ]]>
	</select>

	<!-- 고객 폴더명으로 리스트 조회하기 -->
	<select id="selectSearchCustoFolList" resultType="Customer">
  <![CDATA[
  SELECT *
    FROM CUSTO_ADD
    WHERE IN_FOLDER=#{inFolder}
    AND EMP_NO=#{empNo}
    AND OUTBOX='N'
      ]]>
	</select>

	<!-- 거래처 주소록 수정하기 -->
	<update id="updateComList" parameterType="Company">
   <![CDATA[
	UPDATE COM_ADD
    SET 
    IN_FOLDER=#{inFolder},
    COM_NM=#{comNm},
    COMNO=#{comNo},
    COM_TEL=#{comTel},
    COM_CEO=#{comCeo},
    COM_PIX=#{comPix},
    COM_PHONE=#{comPhone},
    COM_EMAIL=#{comEmail},
    COM_MEMO=#{comMemo}
    WHERE COM_NO=#{compNo}
      ]]>
	</update>
	
	<!-- 고객 주소록 수정하기 -->
	<update id="updateCustoList" parameterType="Customer">
   <![CDATA[
	 UPDATE CUSTO_ADD
    SET 
    IN_FOLDER=#{inFolder},
    COM_NM=#{comNm},
    COMNO=#{comNo},
    COM_TEL=#{comTel},
    COM_CEO=#{comCeo},
    COM_PIX=#{comPix},
    COM_PHONE=#{comPhone},
    COM_EMAIL=#{comEmail},
    COM_MEMO=#{comMemo}
    WHERE CUS_NO=#{cusNo}
      ]]>
	</update>
	
	<!-- 거래처 주소록 삭제하기(상태값 변경'Y') -->
	<update id="deleteComAdd" parameterType="string">
   <![CDATA[
	 UPDATE COM_ADD
    SET OUTBOX='Y'
    WHERE COM_NO=#{compNo}
      ]]>
	</update>
	
	<!-- 고객 주소록 삭제하기(상태값 변경'Y') -->
	<update id="deleteCusAdd" parameterType="string">
   <![CDATA[
	 UPDATE CUSTO_ADD
     SET OUTBOX='Y'
     WHERE CUS_NO=#{cusNo}
      ]]>
	</update>
	
	<!-- 부서별 주소록 검색 -->
		<!--부서별 주소록검색기능 검색한 조건에 따라 이름 직급 부서명 이메일 휴대폰을 보여주는 쿼리 -->
	<select id="selectDeptAddSearch" resultType="WideMember" parameterType="hashMap">
 <![CDATA[
 SELECT A.EMP_NAME,
        C.DEPARTMENT_TITLE,
        B.JOB_NAME,
        A.EMAIL,
        A.PHONE
 	FROM USER_INFO A 
    LEFT JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO = B.JOB_NO
    LEFT JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO 
    WHERE (A.EMP_NAME LIKE '%'||#{search}||'%'
    OR C.DEPARTMENT_TITLE LIKE '%'||#{search}||'%'
    OR B.JOB_NAME LIKE '%'||#{search}||'%'
    OR A.EMAIL LIKE '%'||#{search}||'%'
    OR A.PHONE LIKE '%'||#{search}||'%')
    AND C.DEPARTMENT_TITLE = #{departmentTitle} 
     ]]>
	</select>
	
	<!-- 거래처 주소록 임시보관함 리스트 조회하기 -->
	<select id="selectComBoxAdd" resultMap="companyResultSet">
  <![CDATA[
 	 SELECT *
     FROM COM_ADD
     WHERE EMP_NO=#{empNo}
     AND OUTBOX='Y'
      ]]>
	</select>
	
	<!-- 고객 주소록 임시보관함 리스트 조회하기 -->
	<select id="selectCustoBoxAdd" resultType="Customer">
  <![CDATA[
 	 SELECT *
     FROM CUSTO_ADD
     WHERE EMP_NO=#{empNo}
     AND OUTBOX='Y'
      ]]>
	</select>
	
	 <!-- 고객 주소록 임시보관함 삭제하기 -->
   <delete id="deleteCustoBox" parameterType="java.util.List">
 	 DELETE CUSTO_ADD
     WHERE 1=1
     AND CUS_NO IN
     <foreach collection="list" item="cusNo" open="(" close=")" separator=",">
     	#{cusNo}
     </foreach>
     AND OUTBOX='Y'
	</delete>
	
	<!-- 고객 주소록 임시보관함 복원하기 -->
	<update id="updateBackCustoBox">
	 UPDATE CUSTO_ADD
     SET OUTBOX='N'
     WHERE 1=1
     AND CUS_NO IN
     <foreach collection="list" item="cusNo" open="(" close=")" separator=",">
     	#{cusNo}
     </foreach>
	</update>
	
	<!-- 거래처 주소록 임시보관함 삭제하기 -->
   <delete id="deleteComBox" parameterType="java.util.List">
 	 DELETE COM_ADD
     WHERE 1=1
     AND COM_NO IN
     <foreach collection="list" item="compNo" open="(" close=")" separator=",">
     	#{compNo}
     </foreach>
     AND OUTBOX='Y'
	</delete>
	
	<!-- 거래처 주소록 임시보관함 복원하기 -->
	<update id="updateBackComBox">
	 UPDATE COM_ADD
     SET OUTBOX='N'
     WHERE 1=1
     AND COM_NO IN
     <foreach collection="list" item="compNo" open="(" close=")" separator=",">
     	#{compNo}
     </foreach>
	</update>
	
	<!-- 즐겨찾기 추가하기 -->
	<insert id="insertPavoAdd" parameterType="hashMap">
	 <![CDATA[
	INSERT INTO PAVO_ADD
	VALUES  
	(SEQ_PAVOADD.NEXTVAL,#{empNo},#{ckEmpNo},'Y')
	]]>
	</insert>
	
	<!-- 즐겨찾기 리스트 조회 -->
	<select id="selectFavoAdd" resultType="WideMember" parameterType="String">
	 <![CDATA[
	    SELECT
	 	A.EMP_NO, 
	 	A.EMP_NAME,
        C.DEPARTMENT_TITLE,
        B.JOB_NAME,
        A.EMAIL,
        A.PHONE
 	FROM USER_INFO A 
    LEFT JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO = B.JOB_NO
    LEFT JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO 
									WHERE EMP_NO IN (SELECT EMP_OTHERNO
									                  	FROM PAVO_ADD
									                   	WHERE BM_LOOK ='Y'
									                   	AND EMP_NO =#{empNo})
	]]>
	</select>
	
	<select id="selectUserCount" parameterType="hashMap" resultType="_int">
	 <![CDATA[
		SELECT COUNT(*)
		FROM PAVO_ADD
		WHERE EMP_NO=${empNo}
		AND EMP_OTHERNO=${ckEmpNo}
	]]>
	</select>
	
	
	<!-- 메인주소록 갈때 즐겨찾기 추가되어있는 사번 조회 -->
	<select id="selectEmpNoChList" resultType="WideMember">
  <![CDATA[
SELECT EMP_NO
FROM USER_INFO
            WHERE EMP_NO IN ((SELECT EMP_OTHERNO
                        	FROM PAVO_ADD
                        	WHERE EMP_NO=#{empNo}))
      ]]>
	</select>
	
	<!-- 즐겨찾기 주소록  삭제하기 -->
   <delete id="deletePavoAdd" parameterType="hashMap">
 	DELETE PAVO_ADD
	WHERE EMP_NO=#{empNo}
	AND EMP_OTHERNO=#{ckEmpNo}
 	
	</delete>
</mapper>
