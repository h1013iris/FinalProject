<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manageMapper">
	 <resultMap type="Member" id="wideMemberResultSet">
	 	<id property="empNo" column="EMP_NO"/>
	 	<result property="userId" column="USER_ID"/>
	 	<result property="userPw" column="USER_PW"/>
	 	<result property="empName" column="EMP_NAME"/>
	 	<result property="userNo" column="USER_NO"/>
	 	<result property="email" column="EMAIL"/>
	 	<result property="phone" column="PHONE"/>
	 	<result property="address" column="ADDRESS"/>
	 	<result property="hireDate" column="HIRE_DATE"/>
	 	<result property="status" column="STATUS"/>
	 	<result property="endDate" column="END_DATE"/>
	 	<result property="jobNo" column="JOB_NO"/>
	 	<result property="departmentNo" column="DEPARTMENT_NO"/>
	 	<result property="jobName" column="JOB_NAME"/>
	 	<result property="departmentName" column="DEPARTMENT_TITLE"/>
	 </resultMap> 
 	<resultMap type="Attachment" id="attachmentResultSet">
		<id property="fileNo" column="FILE_NO"/>
		<result property="refListCatNo" column="REF_LIST_CAT_NO"/>
		<result property="largeCat" column="LARGE_CAT"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
	</resultMap>
	<resultMap type="Project" id="projectResultSet">
		<id property="proNo" column="PRO_NO"/>
		<result property="proWriter" column="PRO_WRITER"/>
		<result property="proDepart" column="PRO_DEPART"/>
		<result property="proTitle" column="PRO_TITLE"/>
		<result property="count" column="COUNT"/>
		<result property="proDate" column="PRO_DATE"/>
		<result property="proStatus" column="PRO_STATUS"/>
	</resultMap>
	<resultMap type="calendarWeek" id="avgdayList">
		<result property="monWeek" column="TOT"/>
	</resultMap>
	<select id="selectDepartInfo" parameterType="DepartmentList" resultMap="wideMemberResultSet">
		SELECT *
		FROM USER_INFO A
		JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO =B.JOB_NO
   		JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO 
   		WHERE A.DEPARTMENT_NO = #{deptNo}
   		AND STATUS = 'N'
	</select>
	<select id="selectInfofilter" parameterType="manageDepart" resultMap="wideMemberResultSet" >
		SELECT *
		FROM USER_INFO A
		JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO =B.JOB_NO
   		JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO 
   		WHERE STATUS = 'N'
   		<if test="depNo != null and depNo != 0">
   			AND A.DEPARTMENT_NO = #{depNo}
   		</if>
   		<if test="ord == '이름'">
   			AND A.EMP_NAME LIKE '%' ||#{searchli}||'%' 
   		</if>
   		<if test="ord =='사원번호'">
   			AND A.EMP_NO LIKE '%' ||#{searchli}||'%' 
   		</if>
   		<if test="fil == '직급순'">
   			ORDER BY C.DEPARTMENT_NO
   		</if>
   		<if test="fil == '이름순'">
   			ORDER BY A.EMP_NAME
   		</if>
   		<if test="fil == '입사순'">
   			ORDER BY A.HIRE_DATE
   		</if>
	</select>
	<select id="selectInfoEmployeeAtt" parameterType="string" resultMap="attachmentResultSet">
		SELECT *
		FROM ATTACHMENT
		WHERE REF_LIST_CAT_NO = 10
		AND LARGE_CAT = #{empNo}
		AND STATUS = 'Y'
	</select>
	<select id="selectListProject" parameterType="string" resultMap="projectResultSet">
		SELECT J.PRO_NO, J.PRO_WRITER, J.PRO_DEPART, J.PRO_TITLE, PW.COUNT, J.PRO_DATE, J.PRO_STATUS
		FROM(SELECT *
		FROM PROJECT 
		WHERE PRO_NO IN(SELECT REF_PRO
		                FROM PRO_WATCHER
		                WHERE PW_ATTEN =#{empNo}
		                AND PW_STATUS = 'Y')) J,  (SELECT COUNT(PW_ATTEN) AS COUNT, REF_PRO FROM PRO_WATCHER JOIN PROJECT ON(PRO_NO=REF_PRO) WHERE PW_STATUS = 'Y' GROUP BY REF_PRO ) PW
		WHERE J.PRO_NO = PW.REF_PRO
		ORDER BY PRO_NO
	</select>
	<select id="countSelect" resultType="_int">
		SELECT COUNT(*)
		FROM USER_INFO
		WHERE STATUS = 'N'
	</select>
	<select id = "selectLogInfo" parameterType="_int" resultType="AttendLog">
		SELECT *
		FROM ATTEND_LOG
		WHERE EMP_NO = #{empNo}
		AND TO_DATE(ATTEND_DATE, 'YYYY-mm-dd') = TO_DATE(SYSDATE, 'YYYY-mm-dd')
		AND STATUS = 'Y'
	</select>
	<insert id="insertLogInfo" parameterType="_int">
		INSERT INTO ATTEND_LOG
		(ATTEND_NO, EMP_NO, ATTEND_DATE, ATTEND_TIME, ATTEND_STATUS, STATUS)
		VALUES
		(SEQ_ATTEND.NEXTVAL, #{empNo}, SYSDATE, SYSDATE, DEFAULT, DEFAULT)
	</insert>
	<select id="selectStatusLog" parameterType="_int" resultType="string">
		SELECT ATTEND_STATUS
		FROM ATTEND_LOG
		WHERE EMP_NO = #{empNo}
		AND TO_DATE(ATTEND_DATE, 'YYYY-mm-dd') = TO_DATE(SYSDATE, 'YYYY-mm-dd')
		AND STATUS = 'Y'
	</select>
	<select id="selectListAttendLog" parameterType="calendarWeek" resultType="AttendLog">
		SELECT C.*, U.EMP_NAME AS EMP
		FROM
		(SELECT S.EMP_NO, SUM(MON) AS MON, SUM(TUE) AS TUE, SUM(WEN) AS WEN, SUM(TUR) AS TUR, SUM(FRI) AS FRI
		FROM
		(SELECT K.EMP_NO, 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weeko} THEN K.CAL ELSE 0 END "MON", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekt} THEN K.CAL ELSE 0 END "TUE", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekh} THEN K.CAL ELSE 0 END "WEN", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weeku} THEN K.CAL ELSE 0 END "TUR", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekf} THEN K.CAL ELSE 0 END "FRI"
		FROM (SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
		FROM ATTEND_LOG A
		WHERE (ATTEND_DATE BETWEEN #{weeko} AND #{weekf})
		AND A.STATUS = 'Y'
		ORDER BY A.EMP_NO) K
		ORDER BY K.EMP_NO)S
		GROUP BY S.EMP_NO
		ORDER BY S.EMP_NO)C
		JOIN USER_INFO U ON (C.EMP_NO =U.EMP_NO)
		WHERE U.STATUS = 'N'
	</select>
	<select id="selectFilterInfo" parameterType="manageDepart" resultType="AttendLog">
		SELECT C.*, U.EMP_NAME AS EMP
		FROM
		(SELECT S.EMP_NO, SUM(MON) AS MON, SUM(TUE) AS TUE, SUM(WEN) AS WEN, SUM(TUR) AS TUR, SUM(FRI) AS FRI
		FROM
		(SELECT K.EMP_NO, 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weeko} THEN K.CAL ELSE 0 END "MON", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekt} THEN K.CAL ELSE 0 END "TUE", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekh} THEN K.CAL ELSE 0 END "WEN", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weeku} THEN K.CAL ELSE 0 END "TUR", 
		        CASE WHEN TO_CHAR(K.ATTEND_DATE,'YYYY-MM-DD') = #{weekf} THEN K.CAL ELSE 0 END "FRI"
		FROM (SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
		FROM ATTEND_LOG A
		WHERE (ATTEND_DATE BETWEEN #{weeko} AND #{weekf})
		AND A.STATUS = 'Y'
		ORDER BY A.EMP_NO) K
		ORDER BY K.EMP_NO)S
		GROUP BY S.EMP_NO
		ORDER BY S.EMP_NO)C
		JOIN USER_INFO U ON (C.EMP_NO =U.EMP_NO)
		WHERE U.STATUS = 'N'
		<if test="depNo != null and depNo != 0">
   			AND U.DEPARTMENT_NO = #{depNo}
   		</if>
   		<if test="ord == '이름'">
   			AND U.EMP_NAME LIKE '%' ||#{searchli}||'%' 
   		</if>
   		<if test="ord =='사원번호'">
   			AND U.EMP_NO LIKE '%' ||#{searchli}||'%' 
   		</if>
	</select>
	<select id="selectFirstday" resultType="string">
	<![CDATA[
		SELECT LISTAGG(TOT,',')WITHIN GROUP(ORDER BY TOT )
		AS LIST_N FROM (
		SELECT COALESCE(MON, TUE, WED, THU, FRI) AS TOT
		FROM(
		SELECT  MIN(DECODE(d, 2, day)) mon,
		       MIN(DECODE(d, 3, day)) tue, MIN(DECODE(d, 4, day)) wed,
		       MIN(DECODE(d, 5, day)) thu, MIN(DECODE(d, 6, day)) fri
		FROM 
		(SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM'), 'YYYYMM') + LEVEL-1 day,
		        TO_CHAR(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM'), 'YYYYMM') + LEVEL-1, 'd') d,
		        TO_CHAR(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM'), 'YYYYMM') + LEVEL-1, 'iw') iw
		 FROM dual
		 CONNECT BY LEVEL <= TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM'), 'YYYYMM')), 'DD'))
		GROUP BY DECODE(d, 1, iw+1, iw)
		ORDER BY DECODE(d, 1, iw+1, iw))A)
		]]>
	</select>
	<select id="selectAttendAvg" parameterType="calendarWeek" resultType="AttendLog">
		SELECT DISTINCT K.EMP_NO, K.EMP_NAME, JR.JOB_NAME AS CAL,DEPARTMENT_TITLE AS STATUS,
        NVL((SELECT SUM(CAL) AS TOT1
        FROM(
        SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG A
        WHERE (ATTEND_DATE BETWEEN #{monWeek} AND #{weeko})
        AND A.STATUS = 'Y'
        ORDER BY A.EMP_NO)Q
        WHERE Q.EMP_NO = S.EMP_NO
        GROUP BY Q.EMP_NO
         ),0) as tot, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{tueWeek} AND #{weekt})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot2, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{wenWeek} AND #{weekh})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot3, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{thiWeek} AND #{weeku})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot4, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{friWeek} AND #{weekf})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot5
		from attend_log S
		JOIN USER_INFO K ON (K.EMP_NO = S.EMP_NO)
		JOIN JOB_RANK_MANAGEMENT JR ON (K.JOB_NO=JR.JOB_NO)
		JOIN DEPARTMENT_MANAGEMENT D ON (K.DEPARTMENT_NO = D.DEPARTMENT_NO)
		<if test= "empNo != 0">
			WHERE K.EMP_NO = #{empNo}
		</if>
		ORDER BY k.EMP_NO
	</select> 
	<select id="selectListAttendLogAVG" parameterType="calendarWeek" resultType="AttendLog">
		SELECT K.EMP_NO, K.EMP_NAME, S.TOT
		FROM(SELECT SUM(CAL) AS TOT, Q.EMP_NO
		FROM(
		SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
		FROM ATTEND_LOG A
		WHERE (ATTEND_DATE BETWEEN #{weeko} AND #{weekf})
		AND A.STATUS = 'Y'
		ORDER BY A.EMP_NO)Q
		GROUP BY Q.EMP_NO)S
		JOIN USER_INFO K ON (K.EMP_NO = S.EMP_NO)
		<if test= "empNo != 0">
			WHERE K.EMP_NO = #{empNo}    
		</if>
		ORDER BY S.EMP_NO
	</select>
	<select id="selectListAttendDetail" parameterType="calendarWeek" resultType="AttendLog">
		SELECT A.ATTEND_NO,A.EMP_NO, TO_CHAR(A.ATTEND_DATE,'DD') AS EMP, TO_CHAR(A.ATTEND_DATE, 'DY') AS STATUS ,TO_CHAR( A.ATTEND_TIME,'HH24:MI') AS ATTEND_TIME2, TO_CHAR(A.LEAVE_TIME,'HH24:MI') AS LEAVE_TIME2,
		       NVL(TRUNC(ROUND(TO_CHAR(LEAVE_TIME-ATTEND_TIME)*24*60)/60)-1,0) ||'H ' ||NVL(ROUND(MOD((TO_CHAR(LEAVE_TIME-ATTEND_TIME)*24*60),60)),0)||'M' AS cal,
		       CASE WHEN TO_DATE(ATTEND_DATE,'YY/MM/DD') BETWEEN #{monWeek} AND #{weeko} THEN 1 
		            WHEN TO_DATE(ATTEND_DATE,'YY/MM/DD') BETWEEN #{tueWeek} AND #{weekt} THEN 2 
		            WHEN TO_DATE(ATTEND_DATE,'YY/MM/DD') BETWEEN #{wenWeek} AND #{weekh} THEN 3 
		            WHEN TO_DATE(ATTEND_DATE,'YY/MM/DD') BETWEEN #{thiWeek} AND #{weeku} THEN 4 
		            WHEN TO_DATE(ATTEND_DATE,'YY/MM/DD') BETWEEN #{friWeek} AND #{weekf} THEN 5 
		       END AS MON
		FROM ATTEND_LOG A
		JOIN USER_INFO K ON (K.EMP_NO = A.EMP_NO)
		WHERE A.STATUS = 'Y'
		AND A.EMP_NO = #{empNo}
		ORDER BY ATTEND_DATE
	</select>
	<select id="selectListEdittW" parameterType="calendarWeek" resultType="CmtUpdateForm">
		SELECT CU.DOC_NO, UI.EMP_NAME AS DRAFTER_NAME, CU.DRAFTER, CU.DFT_DATE, TO_CHAR(CU.UPDATE_DATE,'YY/MM/DD') AS UPDATE_DATE, TO_CHAR(CU.BE_ATTEND_TIME,'HH24:MI') AS BE_ATTEND_TIME
        ,  TO_CHAR(CU.BE_LEAVE_TIME,'HH24:MI') AS BE_LEAVE_TIME ,  TO_CHAR(CU.ATTEND_TIME,'HH24:MI') AS ATTEND_TIME,  TO_CHAR(CU.LEAVE_TIME,'HH24:MI') AS LEAVE_TIME
		FROM APRV_DOCUMENT AD
		JOIN CMT_UPDATE_APP CU ON (CU.DOC_NO =AD.DOC_NO) 
		JOIN USER_INFO UI ON (AD.DRAFTER = UI.EMP_NO)
		WHERE APRV_STATUS = 2
		AND AD.STATUS = 'Y'
		AND TO_DATE(AD.DFT_DATE,'YY/MM/DD') BETWEEN #{weeko} AND #{weekf}
		AND CU.EDIT_STATUS = 'N'
	</select>
	<update id="updateCmtForm" parameterType="CmtUpdateForm" >
		UPDATE CMT_UPDATE_APP
		SET EDIT_STATUS = 'Y'
		WHERE DOC_NO = #{docNo}
		AND EDIT_STATUS = 'N'
	</update>
	<update id="updateAttendLogEdit" parameterType="CmtUpdateForm">
		UPDATE ATTEND_LOG
		SET ATTEND_TIME = TO_DATE(#{attendTime},'YY/MM/DD HH24:MI'), LEAVE_TIME = TO_DATE(#{leaveTime},'YY/MM/DD HH24:MI')
		WHERE EMP_NO = #{drafter}
		AND ATTEND_DATE = #{updateDate}
	</update>
	<select id="selectAttendAvgfilter" parameterType="java.util.Map" resultType="AttendLog">
		SELECT DISTINCT K.EMP_NO, K.EMP_NAME, JR.JOB_NAME AS CAL,DEPARTMENT_TITLE AS STATUS,
        NVL((SELECT SUM(CAL) AS TOT1
        FROM(
        SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG A
        WHERE (ATTEND_DATE BETWEEN #{cw.monWeek} AND #{cw.weeko})
        AND A.STATUS = 'Y'
        ORDER BY A.EMP_NO)Q
        WHERE Q.EMP_NO = S.EMP_NO
        GROUP BY Q.EMP_NO
         ),0) as tot, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{cw.tueWeek} AND #{cw.weekt})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot2, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{cw.wenWeek} AND #{cw.weekh})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot3, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{cw.thiWeek} AND #{cw.weeku})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot4, 
        NVL((SELECT SUM(CAL) AS TOT2
        FROM(
        SELECT U.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
        FROM ATTEND_LOG U
        WHERE (ATTEND_DATE BETWEEN #{cw.friWeek} AND #{cw.weekf})
        AND U.STATUS = 'Y'
        ORDER BY U.EMP_NO)T
         WHERE T.EMP_NO = S.EMP_NO
        GROUP BY T.EMP_NO
        ),0) as tot5, K.HIRE_DATE, K.DEPARTMENT_NO
		from attend_log S
		JOIN USER_INFO K ON (K.EMP_NO = S.EMP_NO)
		JOIN JOB_RANK_MANAGEMENT JR ON (K.JOB_NO=JR.JOB_NO)
		JOIN DEPARTMENT_MANAGEMENT D ON (K.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE 1=1
		<if test="md.depNo != null and md.depNo != 0">
   			AND K.DEPARTMENT_NO = #{md.depNo}
   		</if>
   		<if test="md.ord != null and md.ord == '이름'">
   			AND K.EMP_NAME LIKE '%' ||#{md.searchli}||'%' 
   		</if>
   		<if test="md.ord != null and md.ord =='사원번호'">
   			AND K.EMP_NO LIKE '%' ||#{md.searchli}||'%' 
   		</if>
   		<if test="md.fil != null and md.fil == '직급순'">
   			ORDER BY K.DEPARTMENT_NO
   		</if>
   		<if test="md.fil != null and md.fil == '이름순'">
   			ORDER BY K.EMP_NAME
   		</if>
   		<if test="md.fil != null and md.fil == '입사순'">
   			ORDER BY K.HIRE_DATE
   		</if>
	</select>
	<select id="selectListAttendLogAVGfilter" parameterType="java.util.Map" resultType="AttendLog">
		SELECT K.EMP_NO, K.EMP_NAME, S.TOT, K.DEPARTMENT_NO, K.HIRE_DATE
		FROM(SELECT SUM(CAL) AS TOT, Q.EMP_NO
		FROM(
		SELECT A.* , ROUND((LEAVE_TIME - ATTEND_TIME)*24*60) AS CAL
		FROM ATTEND_LOG A
		WHERE (ATTEND_DATE BETWEEN #{cw2.weeko} AND #{cw2.weekf})
		AND A.STATUS = 'Y'
		ORDER BY A.EMP_NO)Q
		GROUP BY Q.EMP_NO)S
		JOIN USER_INFO K ON (K.EMP_NO = S.EMP_NO)
		<if test="md.depNo != null and md.depNo != 0">
   			AND K.DEPARTMENT_NO = #{md.depNo}
   		</if>
   		<if test="md.ord != null and md.ord == '이름'">
   			AND K.EMP_NAME LIKE '%' ||#{md.searchli}||'%' 
   		</if>
   		<if test="md.ord != null and md.ord =='사원번호'">
   			AND K.EMP_NO LIKE '%' ||#{md.searchli}||'%' 
   		</if>
   		<if test="md.fil != null and md.fil == '직급순'">
   			ORDER BY K.DEPARTMENT_NO
   		</if>
   		<if test="md.fil != null and md.fil == '이름순'">
   			ORDER BY K.EMP_NAME
   		</if>
   		<if test="md.fil != null and md.fil == '입사순'">
   			ORDER BY K.HIRE_DATE
   		</if>
	</select>
	<select id="selectInfo" parameterType="_int" resultType="Member">
		SELECT EMP_NAME,  SUBSTR(A.USER_NO,1,6)||'-'||SUBSTR(USER_NO,7,7) AS USER_NO,
				ADDRESS, B.JOB_NAME, C.DEPARTMENT_TITLE AS DEPARTMENT_NAME, TO_CHAR(HIRE_DATE,'YYYY/MM/DD') AS CHANGE_NAME
		FROM USER_INFO A
		JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO =B.JOB_NO
    	JOIN DEPARTMENT_MANAGEMENT C ON A.DEPARTMENT_NO = C.DEPARTMENT_NO 
		WHERE EMP_NO = #{empNo}
	</select> 
	<update id="updateStatusMember" parameterType="AttendLog">
		UPDATE ATTEND_LOG SET ATTEND_STATUS = #{attendStatus}
		WHERE EMP_NO = #{empNo}
		AND TO_DATE(ATTEND_DATE,'YY/MM/DD') = TO_DATE(SYSDATE,'YY/MM/DD')
	</update>
	<update id="updateLeaveTime" parameterType="_int">
		UPDATE ATTEND_LOG SET LEAVE_TIME = SYSDATE
		WHERE EMP_NO = #{empNo}
		AND TO_DATE(ATTEND_DATE,'YY/MM/DD') = TO_DATE(SYSDATE,'YY/MM/DD')
	</update>
</mapper>