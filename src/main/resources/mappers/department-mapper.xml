<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="departMapper">
	<resultMap type="Department" id="departmentResultSet">
		<id property="annoNo" column="ANNO_NO"/>
		<result property="refDepart" column="REF_DEPART"/>
		<result property="annoWR" column="ANNO_WR"/>
		<result property="writerName" column="EMP_NAME"/>
		<result property="writerJo" column="JOB_NAME"/>
		<result property="annoTitle" column="ANNO_TITLE"/>
		<result property="annoContent" column="ANNO_CONTENT"/>
		<result property="accessReply" column="ACCESS_REPLY"/>	
		<result property="annoDate" column="ANNO_DATE"/>	
		<result property="annoChangeDate" column="ANNO_DATE2"/>
		<result property="status" column="STATUS"/>
		<result property="count" column="COUNT"/>	
		<result property="attachStatus" column="ATTACH_STATUS"/>	
		<result property="nextNo" column="NEXTNO"/>	
		<result property="prevNo" column="PREVNO"/>	
	</resultMap>
	<resultMap type="Attachment" id="attachmentResultSet">
		<id property="fileNo" column="FILE_NO"/>
		<result property="refListCatNo" column="REF_LIST_CAT_NO"/>
		<result property="largeCat" column="LARGE_CAT"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
	</resultMap>
	<resultMap type="DepartmentReply" id="departmentReplyResultSet">
		<id property="replyNo" column="AR_NO"/>
		<result property="refDepartNo" column="ANNO_NO"/>
		<result property="replyWriter" column="REPLY_WRITER"/>
		<result property="writerName" column="EMP_NAME"/>
		<result property="writerJo" column="JOB_NAME"/>
		<result property="replyTitle" column="REPLY_TITLE"/>
		<result property="createDate" column="AR_DATE"/>
		<result property="wrDate" column="WR_DATE"/>
		<result property="status" column="AR_STATUS"/>
	</resultMap>
	<resultMap type="Project" id="projectResultSet">
		<id property="proNo" column="PRO_NO"/>
		<result property="proWriter" column="PRO_WRITER"/>
		<result property="proDepart" column="PRO_DEPART"/>
		<result property="proTitle" column="PRO_TITLE"/>
		<result property="count" column="COUNT"/>
		<result property="proDate" column="PRO_DATE"/>
		<result property="proStatus" column="PRO_STATUS"/>
	</resultMap>
	<resultMap type="ProjectClass" id="pcResultSet">
		<id property="pcNo" column="PC_NO"/>
		<result property="refPro" column="REF_PRO"/>
		<result property="pcOne" column="PC_ONE"/>
		<result property="pcTwo" column="PC_TWO"/>
		<result property="pcThree" column="PC_THREE"/>
		<result property="pcFour" column="PC_FOUR"/>
		<result property="pcStatus" column="PC_STATUS"/>
	</resultMap>
	<resultMap type="Member" id="memberResultSet">
	 	<id property="empNo" column="PW_ATTEN"/>
	 	<result property="empName" column="EMP_NAME"/>
	 	<result property="userNo" column="PW_NO"/>
	 	<result property="email" column="REF_PRO"/>
	 	<result property="status" column="PW_STATUS"/>
	 	<result property="jobNo" column="JOB_NO"/>
	 	<result property="departmentNo" column="DEPARTMENT_NO"/>
 	</resultMap>
	
	<insert id="insertAnnoDepart" parameterType="Department">
		INSERT INTO ANNOUNCE_DEPART
		VALUES
		(SEQ_ANNO.NEXTVAL, #{refDepart}, #{annoWR}, #{annoTitle}, #{annoContent}, #{accessReply}, SYSDATE, DEFAULT, DEFAULT, #{attachStatus})
	</insert>
	<insert id="insertAnnoDepartAttach" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES
		(SEQ_ATTACH.NEXTVAL,#{refListCatNo},SEQ_ANNO.CURRVAL, #{originName}, #{changeName}, SYSDATE, DEFAULT)
	</insert>
	<select id="selectAnnoDepartList" parameterType="_int" resultMap="departmentResultSet">
		SELECT ANNO_NO, REF_DEPART,ANNO_WR, EMP_NAME, ANNO_TITLE, ACCESS_REPLY, ANNO_DATE, COUNT
		FROM ANNOUNCE_DEPART AD
		JOIN USER_INFO ON (ANNO_WR=EMP_NO)
		WHERE REF_DEPART = #{adno}
		AND AD.STATUS='Y'
	</select>
	<update id="increaseCount" parameterType="_int">
		UPDATE ANNOUNCE_DEPART
		SET COUNT = COUNT+1
		WHERE ANNO_NO =#{adno}
		AND STATUS='Y'
	</update>
	<select id="selectDepartmentAnno" parameterType="_int" resultMap="departmentResultSet">
		SELECT ADT.ANNO_NO, REF_DEPART, ANNO_WR, EMP_NAME, ANNO_TITLE, ANNO_CONTENT, ACCESS_REPLY,  COUNT, ATTACH_STATUS, JOB_NAME, AD.PREVNO, AD.NEXTNO
		FROM (SELECT ANNO_NO, LAG(ANNO_NO) OVER(ORDER BY ANNO_NO) AS PREVNO, LEAD(ANNO_NO) OVER(ORDER BY ANNO_NO) AS NEXTNO FROM ANNOUNCE_DEPART) AD
		JOIN ANNOUNCE_DEPART ADT ON (AD.ANNO_NO=ADT.ANNO_NO)
		JOIN USER_INFO UI ON(ADT.ANNO_WR=EMP_NO)
		JOIN JOB_RANK_MANAGEMENT JR ON (UI.JOB_NO=JR.JOB_NO)
		WHERE ADT.ANNO_NO =#{adno}
		AND ADT.STATUS='Y'
	</select>
	<select id="selectAttachmentAnno" parameterType="_int" resultMap="attachmentResultSet">
		SELECT FILE_NO, REF_LIST_CAT_NO, LARGE_CAT, ORIGIN_NAME, CHANGE_NAME
		FROM ATTACHMENT
		WHERE REF_LIST_CAT_NO = 60
		AND LARGE_CAT=#{adno}
		AND STATUS = 'Y'
	</select>
	<update id="deleteAnnoDepart" parameterType="_int">
		UPDATE ANNOUNCE_DEPART
		SET STATUS = 'N'
		WHERE ANNO_NO = #{adno}
		AND STATUS ='Y'
	</update>
	<update id="deleteAnnoDepartRef" parameterType="_int">
		UPDATE ATTACHMENT
		SET STATUS ='N'
		WHERE FILE_NO=#{rlcn}
		AND REF_LIST_CAT_NO=60
		AND STATUS='Y'
	</update>
	<update id="updateAnnoDepart" parameterType="Department">
		UPDATE ANNOUNCE_DEPART
		SET ANNO_TITLE =#{annoTitle}, ANNO_CONTENT=#{annoContent}, ACCESS_REPLY=#{accessReply}, ATTACH_STATUS=#{attachStatus}
		WHERE ANNO_NO = #{annoNo}
		AND STATUS='Y'
	</update>
	<update id="updateAnnoDepartAttach">
		UPDATE ATTACHMENT
		SET ORIGIN_NAME = #{originName}, CHANGE_NAME = #{changeName}
		WHERE FILE_NO=#{fileNo}
		AND STATUS ='Y'
	</update>
	<insert id="insertAnnoDepartreAttach" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES
		(SEQ_ATTACH.NEXTVAL,#{refListCatNo},#{largeCat}, #{originName}, #{changeName}, SYSDATE, DEFAULT)
	</insert>
	<insert id="insertAnnoReply" parameterType="DepartmentReply">
		INSERT INTO ANNO_REPLY
		VALUES
		(SEQ_REPLY.NEXTVAL, #{refDepartNo}, #{replyWriter}, #{replyTitle}, SYSDATE, DEFAULT)
	</insert>
	<select id="selectAnnoReplyList" parameterType="_int" resultMap="departmentReplyResultSet">
		SELECT AR_NO, ANNO_NO, REPLY_WRITER, EMP_NAME, REPLY_TITLE, TO_CHAR(AR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS WR_DATE, AR_STATUS, JOB_NAME
		FROM ANNO_REPLY
		JOIN USER_INFO UI ON(REPLY_WRITER=EMP_NO)
        JOIN JOB_RANK_MANAGEMENT JR ON (UI.JOB_NO=JR.JOB_NO)
		WHERE ANNO_NO = #{adno}
		AND AR_STATUS='Y'
	</select>
	<update id="deleteAnnoDepartReply">
		UPDATE ANNO_REPLY
		SET AR_STATUS='N'
		WHERE AR_NO = #{adro}
		AND AR_STATUS='Y'
	</update>
	<insert id="insertDPSimple" parameterType="Project">
		INSERT INTO PROJECT
		VALUES
		(SEQ_ANPRO.NEXTVAL, #{proWriter}, #{proDepart}, #{proTitle}, SYSDATE, DEFAULT)
	</insert>
	<insert id="insertclass">
		INSERT INTO PRO_CLASS
		VALUES 
		(SEQ_PRCL.NEXTVAL, SEQ_ANPRO.CURRVAL, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>
	<insert id="insertInclude" parameterType="Project">
		INSERT INTO PRO_WATCHER
		VALUES
		(SEQ_PROWAT.NEXTVAL, SEQ_ANPRO.CURRVAL, #{proWriter},DEFAULT)
	</insert>
	<select id="selectProjectList" parameterType="_int" resultMap="projectResultSet">
		SELECT J.PRO_NO, J.PRO_WRITER, J.PRO_DEPART, J.PRO_TITLE, PW.COUNT, J.PRO_DATE, J.PRO_STATUS
		FROM(SELECT *
		FROM PROJECT 
		WHERE PRO_NO IN(SELECT REF_PRO
		                FROM PRO_WATCHER
		                WHERE PW_ATTEN =#{emno})) J,  (SELECT COUNT(PW_ATTEN) AS COUNT, REF_PRO FROM PRO_WATCHER JOIN PROJECT ON(PRO_NO=REF_PRO) GROUP BY REF_PRO ) PW
		WHERE J.PRO_NO = PW.REF_PRO
		ORDER BY PRO_NO
	</select>
	<insert id="insertFavProject" parameterType="Project">
		INSERT INTO PROJECT_FAV
		VALUES
		(#{proNo}, #{proWriter}, SYSDATE, DEFAULT)
	</insert>
	<select id="selectFavProjectList" parameterType="_int" resultMap="projectResultSet">
		SELECT J.PRO_NO, J.PRO_WRITER, J.PRO_DEPART, J.PRO_TITLE, PW.COUNT, J.PRO_DATE, J.PRO_STATUS
		FROM(SELECT *
		FROM PROJECT 
		WHERE PRO_NO IN(SELECT REF_PRO
		                FROM PRO_WATCHER
		                WHERE PW_ATTEN =#{emno})) J,  (SELECT COUNT(PW_ATTEN) AS COUNT, REF_PRO FROM PRO_WATCHER JOIN PROJECT ON(PRO_NO=REF_PRO) GROUP BY REF_PRO ) PW
		WHERE J.PRO_NO = PW.REF_PRO
		AND J.PRO_NO IN (SELECT FAV_PRO
		                FROM PROJECT_FAV
		                WHERE PF_EMP=#{emno})
		ORDER BY PRO_NO
	</select>
	<select id="selectProjectFav" parameterType="Project" resultMap="projectResultSet">
		SELECT FAV_PRO AS PRO_NO, PF_EMP AS PRO_WRITER
		FROM PROJECT_FAV
		WHERE FAV_PRO =#{proNo}
		AND PF_EMP = #{proWriter}
	</select>
	<delete id="deleteProjectFav" parameterType="Project">
		DELETE PROJECT_FAV 
		WHERE FAV_PRO =#{proNo}
		AND PF_EMP = #{proWriter}
	</delete>
	<select id ="selectDetailProject" parameterType="_int" resultMap="projectResultSet">
		SELECT *
		FROM PROJECT
		WHERE PRO_NO = #{pjno}
		AND PRO_STATUS ='Y'
	</select>
	<select id="selectPC" parameterType="_int" resultMap="pcResultSet">
		SELECT *
		FROM PRO_CLASS
		WHERE REF_PRO = #{pjno}
		AND PC_STATUS = 'Y'
	</select>
	<select id="selectPW" parameterType="_int" resultMap="memberResultSet">
		SELECT PW_NO, REF_PRO, PW_ATTEN, PW_STATUS
		FROM PRO_WATCHER
		JOIN USER_INFO ON (EMP_NO = PW_ATTEN)
		WHERE REF_PRO = #{pjno}
		AND PW_STATUS='Y'
	</select>
	<select id="selectSP" parameterType="_int" resultType="SemiProject">
		SELECT *
		FROM SEMI_PRO
		WHERE REF_PRO = #{pjno}
		AND SEMI_STATUS = 'Y'
	</select>
	<insert id="insertSemiPro" parameterType="SemiProject">
		INSERT INTO SEMI_PRO
		(SEMI_NO, REF_PRO, REF_PC, SEMI_WRITER, SEMI_TITLE, SEMI_DATE, SEMI_STATUS)
		VALUES
		(SEQ_SEMI.NEXTVAL, #{refPro}, #{refPc}, #{semiWriter}, #{semiTitle}, SYSDATE, DEFAULT)
	</insert>
	<update id="updateprjectClass" parameterType="ProjectClass">
		UPDATE PRO_CLASS
		<if test ="sec == 1">
			SET PC_ONE = #{changepc}
		</if>
		<if test ="sec == 2">
			SET PC_TWO = #{changepc}
		</if>
		<if test ="sec == 3">
			SET PC_THREE = #{changepc}
		</if>
		<if test ="sec == 4">
			SET PC_FOUR = #{changepc}
		</if>
		WHERE PC_NO =#{pcNo}
	</update>
	<!-- 세부프로젝트 타겟 변경 -->
	<update id="updateSemiProTar" parameterType="ProjectClass">
		UPDATE SEMI_PRO
		SET REF_PC=#{changepc}
		WHERE REF_PC=#{originpc}
	</update>
	<update id="deleteTargetName" parameterType="ProjectClass">
		UPDATE PRO_CLASS
		<if test ="sec == 1">
			SET PC_ONE = NULL
		</if>
		<if test ="sec == 2">
			SET PC_TWO = NULL
		</if>
		<if test ="sec == 3">
			SET PC_THREE = NULL
		</if>
		<if test ="sec == 4">
			SET PC_FOUR = NULL
		</if>
		WHERE PC_NO =#{pcNo}
	</update>
	<update id="deleteSemiProTar" parameterType="ProjectClass">
		UPDATE SEMI_PRO
		SET SEMI_STATUS ='N'
		WHERE REF_PC=#{originpc}
	</update>
	<select id="selectSemiDetailPro" parameterType="_int" resultType="SemiProject">
		SELECT *
		FROM SEMI_PRO
		WHERE SEMI_NO = #{sino}
	</select>
</mapper>