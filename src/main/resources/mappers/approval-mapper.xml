<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="aprvMapper">
	
	<!-- 결재 대기, 요청 문서, 반려, 완료 리스트 -->
	<resultMap type="AprvDoc" id="aprvListRSet">
		<result property="drafter" column="DRAFTER_NAME"/>
		<result property="draftDate" column="DFT_DATE"/>
	</resultMap>
	
	
	
	
	<!-- 문서 등록 -->
	
	<!-- 결재선 조회 -->
	<select id="selectDeptApprover" parameterType="Member" resultType="Member">
		SELECT
			A.EMP_NO,
		    A.EMP_NAME,
		    B.JOB_NAME
		FROM USER_INFO A
		JOIN JOB_RANK_MANAGEMENT B ON A.JOB_NO = B.JOB_NO
		
			<if test='jobNo lt "4"'>
				WHERE A.JOB_NO IN (4, 7)
			</if>
			<if test='jobNo gte "4" and jobNo lt "7"'>
				WHERE A.JOB_NO = 7
			</if>
		AND A.DEPARTMENT_NO = #{departmentNo}
		ORDER BY B.JOB_NO
	</select>
	
	<!-- 부서 리스트 조회 -->
	<select id="selectDeptName" parameterType="string" resultType="string">
		SELECT DEPARTMENT_TITLE
		FROM DEPARTMENT_MANAGEMENT
		WHERE DEPARTMENT_NO = #{deptNo}
	</select>
	
	<!-- 결재 문서 등록 -->
	<insert id="insertAprvDoc" parameterType="AprvDoc">
		INSERT INTO APRV_DOCUMENT VALUES
		(SEQ_DOC_NO.CURRVAL, #{docType}, #{docTitle}, #{drafter}, SYSDATE, #{firstAprv}, #{secondAprv}, DEFAULT, DEFAULT)
	</insert>
	
	<!-- 결재 기록 등록 -->
	<insert id="insertAprvHistory" parameterType="AprvHistory">
		INSERT INTO APRV_HISTORY VALUES
		(SEQ_APRV_HISTORY.NEXTVAL, SEQ_DOC_NO.CURRVAL, #{approver}, #{approverJob}, #{aprvPro}, DEFAULT)
	</insert>
	
	<!-- 휴가 신청서 등록 -->
	<insert id="insertLeaveApp" parameterType="LeaveForm">
		INSERT INTO LEAVE_APP VALUES
		(SEQ_LEAVE_APP.NEXTVAL, SEQ_DOC_NO.NEXTVAL, #{docTypeNo}, #{drafter}, #{drafterDept}, DEFAULT, #{vacType}, #{startDate}, #{endDate}, #{vacUseDays}, #{vacReason})
	</insert>
	
	<!-- 해당 날짜 근태 기록 조회 -->
	<select id="selectCmt" parameterType="AttendLog" resultType="AttendLog">
		SELECT
		    SUBSTR(TO_CHAR(ATTEND_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS ATTEND_TIME2,
		    SUBSTR(TO_CHAR(LEAVE_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS LEAVE_TIME2
		FROM ATTEND_LOG
		WHERE 1=1
		AND EMP_NO = #{empNo}
		AND ATTEND_DATE = TO_DATE(#{attendDate})
	</select>
	
	<!-- 근태 기록 수정 의뢰 신청서 등록 -->
	<insert id="insertCmtUpdateApp" parameterType="CmtUpdateForm">
		INSERT INTO CMT_UPDATE_APP VALUES
		(SEQ_CMT_UPD_APP.NEXTVAL, SEQ_DOC_NO.NEXTVAL, #{docTypeNo}, #{drafter}, #{drafterDept}, SYSDATE, 
		#{updateDate}, TO_DATE(#{beAttendTime}, 'YYYY-MM-DD HH24:MI'), TO_DATE(#{beLeaveTime}, 'YYYY-MM-DD HH24:MI'), 
		TO_DATE(#{attendTime}, 'YYYY-MM-DD HH24:MI'), TO_DATE(#{leaveTime}, 'YYYY-MM-DD HH24:MI'), #{updateReason})
	</insert>
	
	<!-- 부서 리스트 조회 -->
	<select id="selectDeptList" resultType="DepartmentList">
		SELECT * FROM DEPARTMENT_MANAGEMENT
	</select>
	
	<!-- 업무 기안서 등록 -->
	<insert id="insertBusDraft" parameterType="BusDraftForm">
		INSERT INTO BUSINESS_DFT VALUES
		(SEQ_BUSINESS_DFT.NEXTVAL, SEQ_DOC_NO.NEXTVAL, #{docTypeNo}, #{docTitle}, #{drafter}, #{drafterDept}, SYSDATE, #{enfDate}, #{coopDept}, #{dftContent})
	</insert>
	
	<!-- 업무 협조문 -->
	<insert id="insertBusCoop" parameterType="BusCoopForm">
		INSERT INTO BUSINESS_COOP VALUES
		(SEQ_BUSINESS_DFT.NEXTVAL, SEQ_DOC_NO.NEXTVAL, #{docTypeNo}, #{docTitle}, #{drafter}, #{drafterDept}, SYSDATE, #{receiveDept}, #{coopContent})
	</insert>
	
	<!-- 결재 대기 리스트 개수 -->
	<select id="waitingListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_PRO IN ('A', 'D')
		AND APRV_STATUS = 1
		AND (APRV_HISTORY_NO, DOC_NO) IN (SELECT MAX(B.APRV_HISTORY_NO), B.DOC_NO
                                  		  FROM APRV_DOCUMENT A
                                  		  JOIN APRV_HISTORY B ON A.DOC_NO = B.DOC_NO
                                  		  GROUP BY B.DOC_NO)
		AND ((FIRST_APRV = #{empNo} AND APPROVER = DRAFTER)
		OR (SECOND_APRV = #{empNo} AND APPROVER = FIRST_APRV))
	</select>
	
	<!-- 결재 대기 리스트 조회 -->
	<select id="selectWaitingList" parameterType="_int" resultMap="aprvListRSet">
		SELECT *
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_PRO IN ('A', 'D')
		AND APRV_STATUS = 1
		AND (APRV_HISTORY_NO, DOC_NO) IN (SELECT MAX(B.APRV_HISTORY_NO), B.DOC_NO
                                      FROM APRV_DOCUMENT A
                                  	  JOIN APRV_HISTORY B ON A.DOC_NO = B.DOC_NO
                                  	  GROUP BY B.DOC_NO)
		AND ((FIRST_APRV = #{empNo} AND APPROVER = DRAFTER)
		OR (SECOND_APRV = #{empNo} AND APPROVER = FIRST_APRV))
		ORDER BY PRO_DATE DESC
	</select>
	
	<!-- 결재 요청 리스트 개수 -->
	<select id="requestListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_PRO IN ('A', 'D')
		AND APPROVER = #{empNo}
	</select>
	
	<!-- 결재 요청 리스트 조회  -->
	<select id="selectRequestList" parameterType="_int" resultMap="aprvListRSet">
		SELECT *
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_PRO IN ('A', 'D')
		AND APPROVER = #{empNo}
		ORDER BY PRO_DATE DESC
	</select>
	
	<!-- 해당 문서의 서식 번호 조회 -->
	<select id="selectDocTypeNo" parameterType="_int" resultType="_int">
		SELECT DOC_TYPE
		FROM APRV_DOCUMENT
		WHERE DOC_NO = #{docNo}
	</select>
	
	<!-- 해당 문서 결재자 조회 -->
	<select id="selectDocApprover" parameterType="_int" resultType="AprvDoc">
		SELECT
		    A.DOC_NO,
		    B.EMP_NAME AS FIRST_APRV,
		    D.JOB_NAME AS FIRST_JOB,
		    C.EMP_NAME AS SECOND_APRV,
		    E.JOB_NAME AS SECOND_JOB
		FROM APRV_DOCUMENT A
		JOIN USER_INFO B ON A.FIRST_APRV = B.EMP_NO
		LEFT JOIN USER_INFO C ON A.SECOND_APRV = C.EMP_NO
		JOIN JOB_RANK_MANAGEMENT D ON B.JOB_NO = D.JOB_NO
		LEFT JOIN JOB_RANK_MANAGEMENT E ON C.JOB_NO = E.JOB_NO
		WHERE A.DOC_NO = #{docNo}
	</select>
	
	<!-- 휴가 신청서 상세 조회 -->
	<select id="selectLeaveForm" parameterType="_int" resultType="LeaveForm">
		SELECT A.*, B.EMP_NAME, C.JOB_NAME
		FROM LEAVE_APP A
		JOIN USER_INFO B ON A.DRAFTER = B.EMP_NO
		JOIN JOB_RANK_MANAGEMENT C ON A.DRAFTER_DEPT = C.JOB_NO
		WHERE DOC_NO = #{docNo}
	</select>
	
	<!-- 근태 기록 수정 신청서 상세 조회 -->
	<select id="selectCmtUpdateForm" parameterType="_int" resultType="CmtUpdateForm">
		SELECT
		    A.DOC_NO,
		    A.DOC_TYPE_NO,
		    A.DRAFTER,
		    A.DRAFTER_DEPT,
		    A.DFT_DATE,
		    A.UPDATE_DATE,
		    SUBSTR(TO_CHAR(A.BE_ATTEND_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS BE_ATTEND_TIME,
		    SUBSTR(TO_CHAR(A.BE_LEAVE_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS BE_LEAVE_TIME,
		    SUBSTR(TO_CHAR(A.ATTEND_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS ATTEND_TIME,
		    SUBSTR(TO_CHAR(A.LEAVE_TIME, 'YYYY/MM/DD HH24:MI:SS'), 12, 5) AS LEAVE_TIME,
		    A.UPDATE_REASON,
		    B.EMP_NAME,
		    C.JOB_NAME
		FROM CMT_UPDATE_APP A
		JOIN USER_INFO B ON A.DRAFTER = B.EMP_NO
		JOIN JOB_RANK_MANAGEMENT C ON A.DRAFTER_DEPT = C.JOB_NO
		WHERE DOC_NO = #{docNo}
	</select>	
	
	<!-- 업무 기안서 상세 조회 -->
	<select id="selectbusDraftForm" parameterType="_int" resultType="BusDraftForm">
		SELECT A.*, B.EMP_NAME, C.JOB_NAME, D.DEPARTMENT_TITLE
		FROM BUSINESS_DFT A
		JOIN USER_INFO B ON A.DRAFTER = B.EMP_NO
		JOIN JOB_RANK_MANAGEMENT C ON A.DRAFTER_DEPT = C.JOB_NO
		JOIN DEPARTMENT_MANAGEMENT D ON A.COOP_DEPT = D.DEPARTMENT_NO
		WHERE DOC_NO = #{docNo}
	</select>	
	
	<!-- 업무 협조문 상세 조회 -->
	<select id="selectbusCoopForm" parameterType="_int" resultType="BusCoopForm">
		SELECT A.*, B.EMP_NAME, C.JOB_NAME, D.DEPARTMENT_TITLE
		FROM BUSINESS_COOP A
		JOIN USER_INFO B ON A.DRAFTER = B.EMP_NO
		JOIN JOB_RANK_MANAGEMENT C ON A.DRAFTER_DEPT = C.JOB_NO
		JOIN DEPARTMENT_MANAGEMENT D ON A.RECEIVE_DEPT = D.DEPARTMENT_NO
		WHERE DOC_NO = #{docNo}
	</select>
	
	<!-- 결재 반려, 승인, 임시저장 기록 등록 -->
	<insert id="insertAprvHistory2" parameterType="AprvHistory">
		INSERT INTO APRV_HISTORY VALUES
		(SEQ_APRV_HISTORY.NEXTVAL, #{docNo}, #{approver}, #{approverJob}, #{aprvPro}, SYSDATE)
	</insert>
	
	<!-- 문서 상테값 업데이트 -->
	<update id="updateDoc" parameterType="AprvDoc">
		UPDATE APRV_DOCUMENT
		SET APRV_STATUS = #{aprvStatus}
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 반려 문서 등록 -->
	<insert id="aprvReturn" parameterType="ReturnDoc">
		INSERT INTO RETURN_DOC VALUES
		(#{docNo}, #{reFrom}, #{reReason}, SYSDATE)
	</insert>
	
	<!-- 결재 반려 리스트 개수 -->
	<select id="returnListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM V_APRV_HISTORY A
		JOIN RETURN_DOC B ON A.DOC_NO = B.DOC_NO
		WHERE 1=1
		AND A.APRV_STATUS = 4
		AND A.APPROVER = #{empNo}
		AND B.RE_FROM != #{empNo}
	</select>
	
	<!-- 결재 반려 리스트 조회 -->
	<select id="selectReturnList" parameterType="_int" resultMap="aprvListRSet">
		SELECT *
		FROM V_APRV_HISTORY A
		JOIN RETURN_DOC B ON A.DOC_NO = B.DOC_NO
		WHERE 1=1
		AND A.APRV_STATUS = 4
		AND A.APPROVER = #{empNo}
		AND B.RE_FROM != #{empNo}
		ORDER BY B.RE_DATE DESC
	</select>
	
	<!-- 반려 사유 조회 -->
	<select id="selectReReason" parameterType="_int" resultType="ReturnDoc">
		SELECT A.DOC_NO, A.RE_FROM, B.EMP_NAME AS RE_FROM_NAME, A.RE_DATE, A.RE_REASON
		FROM RETURN_DOC A
		JOIN USER_INFO B ON A.RE_FROM = B.EMP_NO
		WHERE A.DOC_NO = #{docNo}
	</select>
	
	<!-- 기안자 조회 -->
	<select id="selectDrafter" parameterType="_int" resultType="_int">
		SELECT DRAFTER
		FROM APRV_DOCUMENT
		WHERE DOC_NO = #{docNo}
	</select>
	
	<!-- 반려 문서 삭제 -->
	<update id="deleteReturnDoc" parameterType="_int">
		UPDATE APRV_DOCUMENT
		SET STATUS = 'N'
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 결재 완료 문서 총 개수 -->
	<select id="completeListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_STATUS = 2
		AND (APRV_HISTORY_NO, DOC_NO) IN (SELECT MAX(D.APRV_HISTORY_NO), D.DOC_NO
		                                      FROM APRV_DOCUMENT C
		                                      JOIN APRV_HISTORY D ON C.DOC_NO = D.DOC_NO
		                                      GROUP BY D.DOC_NO)
		AND (DRAFTER = #{empNo} OR FIRST_APRV = #{empNo} OR SECOND_APRV = #{empNo})
	</select>
	
	<!-- 결재 완료 문서 리스트 -->
	<select id="selectCompleteList" parameterType="_int" resultMap="aprvListRSet">
		SELECT *
		FROM V_APRV_HISTORY
		WHERE 1=1
		AND APRV_STATUS = 2
		AND (APRV_HISTORY_NO, DOC_NO) IN (SELECT MAX(D.APRV_HISTORY_NO), D.DOC_NO
		                                      FROM APRV_DOCUMENT C
		                                      JOIN APRV_HISTORY D ON C.DOC_NO = D.DOC_NO
		                                      GROUP BY D.DOC_NO)
		AND (DRAFTER = #{empNo} OR FIRST_APRV = #{empNo} OR SECOND_APRV = #{empNo})
		ORDER BY PRO_DATE DESC
	</select>
	
	<!-- 문서 보안 요청 -->
	<insert id="docScrtyRequest" parameterType="SecurityDoc">
		INSERT INTO SECURITY_DOC VALUES
		(#{docNo}, #{scrtyReason}, SYSDATE, NULL, DEFAULT)
	</insert>
	
	
</mapper>
